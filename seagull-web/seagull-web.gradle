ext {
  springConfigLocation = System.getProperty('spring.config.location', "${System.getProperty('user.home')}/.spinnaker/")
  springProfiles = System.getProperty('spring.profiles.active', "test,local")
  repackage = System.getProperty('springBoot.repackage', "false")
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.config.location', project.springConfigLocation)
  systemProperty('spring.profiles.active', project.springProfiles)
}

apply plugin: 'spring-boot'
apply plugin: 'nebula.ospackage'
apply plugin: 'application'

dependencies {
  compile project(":spring-slack")
  compile project(":spinnaker-api")

  compile('org.springframework.boot:spring-boot-starter-web')
  testCompile('org.springframework.boot:spring-boot-starter-test')
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

String toVers(String v) {
  int idx = v.indexOf('-')
  if (idx != -1) {
    return v.substring(0, idx)
  }
  return v
}

applicationName = 'seagull-web'
applicationDefaultJvmArgs = ["-Djava.security.egd=file:/dev/./urandom"]
applicationDistribution.from(project.file('config')) {
  into 'config'
}

ospackage {
  packageName = "${project.applicationName}"
  version = toVers(project.version.toString())
  release '3'
  into "/opt/${packageName}"
  from "${project.buildDir}/install/${project.applicationName}"

  // installer scripts
  postInstall = file('pkg_scripts/postInstall.sh')
  postUninstall = file('pkg_scripts/postUninstall.sh')

  from(file('etc/init/seagull.conf')) {
    into('/etc/init')
    user = 'root'
    permissionGroup = 'root'
    fileType = CONFIG | NOREPLACE
  }

  from(file('etc/logrotate.d/gate')) {
    into('/etc/logrotate.d')
    user = 'root'
    permissionGroup = 'root'
    fileMode = 0644
    fileType = CONFIG | NOREPLACE
  }
}

buildDeb {
   dependsOn installDist
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  classpath configurations.runtime + file('config')
}

tasks.bootRepackage.enabled = project.repackage
